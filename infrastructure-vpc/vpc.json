{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "ch4devops - VPC With Public and Private Subnet",

  "Parameters" : {

    "AccountName" : {
      "Type" : "String"
    },

    "Environment" : {
      "Type" : "String",
      "AllowedValues" : ["dev", "prod"]
    },

    "Environment" : {
      "Type" : "String"
    },

    "IpCustomerGateway" : {
      "Type" : "String",
      "Description" : "IP Address of the VPN device",
      "MinLength": "9",
      "MaxLength": "15",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
    },

    "VpcCidr" : {
      "Type" : "String",
      "Description" : "IP Address range for the VPC",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },

    "PrivateSubnetCidrA" : {
      "Type" : "String",
      "Description" : "IP Address range for the private Subnet on Availability Zone A",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },

    "PrivateSubnetCidrB" : {
      "Type" : "String",
      "Description" : "IP Address range for the private Subnet on Availability Zone B",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },

    "PrivateSubnetCidrC" : {
      "Type" : "String",
      "Description" : "IP Address range for the private Subnet on Availability Zone C",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },

    "PublicSubnetCidrA" : {
      "Type" : "String",
      "Description" : "IP Address range for the public Subnet on Availability Zone A",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },

    "PublicSubnetCidrB" : {
      "Type" : "String",
      "Description" : "IP Address range for the public Subnet on Availability Zone B",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },

    "PublicSubnetCidrC" : {
      "Type" : "String",
      "Description" : "IP Address range for the public Subnet on Availability Zone C",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },

    "OnPremiseCidr" : {
      "Type" : "String",
      "Description" : "IP Address range for ch4devops infrastructure",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },

    "VPNConnectionEnabled" : {
      "Type" : "String",
      "Default" : "false",
      "AllowedValues" : ["true", "false"]
    }

  },

  "Conditions" : {
    "CreateVPNConnection" : { "Fn::Equals" : [ {"Ref" : "VPNConnectionEnabled" }, "True" ] }
  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" : { "Ref" : "VpcCidr" },
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"} ]]}
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "PrivateSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PrivateSubnetCidrA" },
        "AvailabilityZone" : { "Fn::Select" : [ 0, { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"}, "PrivateSubnetA" ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "PrivateSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PrivateSubnetCidrB" },
        "AvailabilityZone" : { "Fn::Select" : [ 1, { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"}, "PrivateSubnetB" ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "PrivateSubnetC" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PrivateSubnetCidrC" },
        "AvailabilityZone" : { "Fn::Select" : [ 2, { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"}, "PrivateSubnetC" ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "PublicSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PublicSubnetCidrA" },
        "AvailabilityZone" : { "Fn::Select" : [ 0, { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
        "MapPublicIpOnLaunch" : "true",
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"}, "PublicSubnetA" ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "PublicSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PublicSubnetCidrB" },
        "AvailabilityZone" : { "Fn::Select" : [ 1, { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
        "MapPublicIpOnLaunch" : "true",
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"}, "PublicSubnetB" ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "PublicSubnetC" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PublicSubnetCidrC" },
        "AvailabilityZone" : { "Fn::Select" : [ 2, { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
        "MapPublicIpOnLaunch" : "true",
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"}, "PublicSubnetC" ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "InternetGateway" : {
         "Type" : "AWS::EC2::InternetGateway",
         "Properties" : {
            "Tags" : [
              {
                "Key" : "Name",
                "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"} ]]}
              },
              {
                "Key" : "AccountName",
                "Value" : { "Ref" : "AccountName" }
              },
              {
                "Key" : "Environment",
                "Value" : { "Ref" : "Environment" }
              }
            ]
         }
    },

    "VPNGateway" : {
      "Type" : "AWS::EC2::VPNGateway",
      "Condition" : "CreateVPNConnection",
      "Properties" : {
        "Type" : "ipsec.1",
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"} ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "VPNGatewayAttachment" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Condition" : "CreateVPNConnection",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "VpnGatewayId" : {"Ref" : "VPNGateway" }
      }
    },

    "InternetGatewayAttachment" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "InternetGatewayId" : {"Ref" : "InternetGateway" }
      }
    },

    "CustomerGateway" : {
      "Type" : "AWS::EC2::CustomerGateway",
      "Condition" : "CreateVPNConnection",
      "Properties" : {
        "Type" : "ipsec.1",
        "BgpAsn" : "65000",
        "IpAddress" : { "Ref" : "IpCustomerGateway" },
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"} ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "VPNConnection" : {
      "Type" : "AWS::EC2::VPNConnection",
      "Condition" : "CreateVPNConnection",
      "Properties" : {
        "Type" : "ipsec.1",
        "StaticRoutesOnly" : "true",
        "CustomerGatewayId" : {"Ref" : "CustomerGateway"},
        "VpnGatewayId" : { "Ref" : "VPNGateway" }
      }
    },

    "VPNConnectionRoute" : {
      "Type" : "AWS::EC2::VPNConnectionRoute",
      "Condition" : "CreateVPNConnection",
      "Properties" : {
        "VpnConnectionId" : { "Ref" : "VPNConnection" },
        "DestinationCidrBlock" : { "Ref" : "OnPremiseCidr" }
      }
    },

    "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"}, "Private" ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"}, "Public" ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "PrivateSubnetRouteTableAssociationA" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetA" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "PrivateSubnetRouteTableAssociationB" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetB" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "PrivateSubnetRouteTableAssociationC" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetC" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "PublicSubnetRouteTableAssociationA" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetA" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicSubnetRouteTableAssociationB" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetB" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicSubnetRouteTableAssociationC" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetC" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PrivateRoute" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "CreateVPNConnection",
      "DependsOn" : "VPNGatewayAttachment",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable" },
        "DestinationCidrBlock" : {"Ref": "OnPremiseCidr"},
        "GatewayId" : { "Ref" : "VPNGateway" }
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "InternetGatewayAttachment",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PrivateNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"}, "Private" ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" :
        [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AccountName"}, { "Ref" : "Environment"}, "Public" ]]}
          },
          {
            "Key" : "AccountName",
            "Value" : { "Ref" : "AccountName" }
          },
          {
            "Key" : "Environment",
            "Value" : { "Ref" : "Environment" }
          }
        ]
      }
    },

    "InboundPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "OutBoundPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "InboundPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "OutBoundPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "PrivateSubnetNetworkAclAssociationA" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetA" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "PrivateSubnetNetworkAclAssociationB" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetB" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "PrivateSubnetNetworkAclAssociationC" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetC" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "PublicSubnetNetworkAclAssociationA" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetA" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PublicSubnetNetworkAclAssociationB" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetB" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PublicSubnetNetworkAclAssociationC" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetC" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    }
  },

  "Outputs" : {

    "VPCId" : {
      "Description" : "VPCId of the newly created VPC",
      "Value" :  { "Ref" : "VPC" }
    },

    "PrivateSubnet" : {
      "Description" : "SubnetId of the VPN connected subnet",
      "Value" :  { "Ref" : "PrivateSubnetA" }
    },

    "PrivateSubnet" : {
      "Description" : "SubnetId of the VPN connected subnet",
      "Value" :  { "Ref" : "PrivateSubnetB" }
    },

    "PrivateSubnet" : {
      "Description" : "SubnetId of the VPN connected subnet",
      "Value" :  { "Ref" : "PrivateSubnetC" }
    },

    "PublicSubnet" : {
      "Description" : "SubnetId of the VPN connected subnet",
      "Value" :  { "Ref" : "PublicSubnetA" }
    },

    "PublicSubnet" : {
      "Description" : "SubnetId of the VPN connected subnet",
      "Value" :  { "Ref" : "PublicSubnetB" }
    },

    "PublicSubnet" : {
      "Description" : "SubnetId of the VPN connected subnet",
      "Value" :  { "Ref" : "PublicSubnetC" }
    }
  }
}
